import java.nio.file.Files

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0"
group = "com.pwootage.oc.js"
archivesBaseName = "oc-js"

minecraft {
    version = "1.10.2-12.18.3.2221"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    mappings = "snapshot_20160720"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replaceIn "com/pwootage/oc/nashorn/OCNASHORN.scala"
    replace "@VERSION@", project.version
}

repositories {
    maven { url = "http://maven.cil.li/" }
}

dependencies {
    compile "li.cil.oc:OpenComputers:MC1.10-1.6.+:api"
}

task grunt(type: Exec) {
    executable "grunt"

    //Dirty hack because osx/intellij path -.-
    if (System.getProperty("os.name").toLowerCase().contains("mac")) {
        if (!System.getenv("PATH").contains("/usr/local/bin")) {
            executable "/usr/local/bin/node"
            args "/usr/local/bin/grunt"
        }
    }

    args "default"
}

processResources.dependsOn('grunt')

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

class UglifyTask extends DefaultTask {
    @InputDirectory
    def File source

    @OutputDirectory
    def File target

    @TaskAction
    void execute(IncrementalTaskInputs inputs) {
        if (!inputs.incremental)
            project.delete(target.listFiles())

        inputs.outOfDate { change ->
            def src = source.toPath().relativize(change.file.toPath())
            def dest = target.toPath().resolve(src)

            Files.createDirectories(dest.getParent())
            project.exec {
                executable "uglifyjs"
                //Dirty hack because osx/intellij path -.-
                if (System.getProperty("os.name").toLowerCase().contains("mac")) {
                    if (!System.getenv("PATH").contains("/usr/local/bin")) {
                        executable "/usr/local/bin/node"
                        args "/usr/local/bin/uglifyjs"
                    }
                }
                args "--screw-ie8", "--compress", "--mangle"
                args "--output", dest.toAbsolutePath()
                args "--", change.file.toString()
            }
        }

        inputs.removed { change ->
            new File(target, change.file.name).delete()
        }
    }
}
